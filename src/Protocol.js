// Generated by ReScript, PLEASE EDIT WITH CARE

import * as List from "rescript/lib/es6/list.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Raw$TravelAgency from "./mpst/Raw.js";
import * as Mpst$TravelAgency from "./mpst/Mpst.js";

function lens_c_get(param) {
  return param[2];
}

function lens_c_put(param, c) {
  return [
          param[0],
          param[1],
          c
        ];
}

var lens_c = {
  get: lens_c_get,
  put: lens_c_put
};

function lens_s_get(param) {
  return param[1];
}

function lens_s_put(param, s) {
  return [
          param[0],
          s,
          param[2]
        ];
}

var lens_s = {
  get: lens_s_get,
  put: lens_s_put
};

function lens_a_get(param) {
  return param[0];
}

function lens_a_put(param, a) {
  return [
          a,
          param[1],
          param[2]
        ];
}

var lens_a = {
  get: lens_a_get,
  put: lens_a_put
};

var customer_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Customer",
              VAL: v
            };
    })
};

var customer = {
  role_label: customer_role_label,
  role_lens: lens_c
};

var agency_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Agency",
              VAL: v
            };
    })
};

var agency = {
  role_label: agency_role_label,
  role_lens: lens_a
};

var hotel_role_label = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "Hotel",
              VAL: v
            };
    })
};

var hotel = {
  role_label: hotel_role_label,
  role_lens: lens_s
};

var reserve_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "reserve",
              VAL: v
            };
    })
};

function reserve_label_open(v) {
  return {
          NAME: "reserve",
          VAL: v
        };
}

var reserve = {
  label_closed: reserve_label_closed,
  label_open: reserve_label_open
};

var cancel_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "cancel",
              VAL: v
            };
    })
};

function cancel_label_open(v) {
  return {
          NAME: "cancel",
          VAL: v
        };
}

var cancel = {
  label_closed: cancel_label_closed,
  label_open: cancel_label_open
};

function reserve_or_cancel_concat(l, r) {
  return {
          hd: {
            NAME: "reserve",
            VAL: Mpst$TravelAgency.list_match((function (param) {
                    return param.VAL;
                  }), l)
          },
          tl: {
            hd: {
              NAME: "cancel",
              VAL: Mpst$TravelAgency.list_match((function (param) {
                      return param.VAL;
                    }), r)
            },
            tl: /* [] */0
          }
        };
}

function reserve_or_cancel_split(lr) {
  return [
          {
            hd: {
              NAME: "reserve",
              VAL: Mpst$TravelAgency.list_match((function (x) {
                      if (x.NAME === "cancel") {
                        return Raw$TravelAgency.dontknow(undefined);
                      } else {
                        return x.VAL;
                      }
                    }), lr)
            },
            tl: /* [] */0
          },
          {
            hd: {
              NAME: "cancel",
              VAL: Mpst$TravelAgency.list_match((function (x) {
                      if (x.NAME === "cancel") {
                        return x.VAL;
                      } else {
                        return Raw$TravelAgency.dontknow(undefined);
                      }
                    }), lr)
            },
            tl: /* [] */0
          }
        ];
}

var reserve_or_cancel = {
  concat: reserve_or_cancel_concat,
  split: reserve_or_cancel_split
};

var price_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "price",
              VAL: v
            };
    })
};

function price_label_open(v) {
  return {
          NAME: "price",
          VAL: v
        };
}

var price = {
  label_closed: price_label_closed,
  label_open: price_label_open
};

var billing_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "billing",
              VAL: v
            };
    })
};

function billing_label_open(v) {
  return {
          NAME: "billing",
          VAL: v
        };
}

var billing = {
  label_closed: billing_label_closed,
  label_open: billing_label_open
};

var customer_option_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "customer_option",
              VAL: v
            };
    })
};

function customer_option_label_open(v) {
  return {
          NAME: "customer_option",
          VAL: v
        };
}

var customer_option = {
  label_closed: customer_option_label_closed,
  label_open: customer_option_label_open
};

var response_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "response",
              VAL: v
            };
    })
};

function response_label_open(v) {
  return {
          NAME: "response",
          VAL: v
        };
}

var response = {
  label_closed: response_label_closed,
  label_open: response_label_open
};

var notice_label_closed = {
  closed_match: (function (param) {
      return param.VAL;
    }),
  closed_make: (function (v) {
      return {
              NAME: "notice",
              VAL: v
            };
    })
};

function notice_label_open(v) {
  return {
          NAME: "notice",
          VAL: v
        };
}

var notice = {
  label_closed: notice_label_closed,
  label_open: notice_label_open
};

function to_agency(disj) {
  return {
          concat: (function (l, r) {
              return List.map((function (v) {
                            return {
                                    NAME: "Agency",
                                    VAL: {
                                      __out_witness: v
                                    }
                                  };
                          }), Curry._2(disj.concat, List.map((function (param) {
                                    return param.VAL.__out_witness;
                                  }), l), List.map((function (param) {
                                    return param.VAL.__out_witness;
                                  }), r)));
            }),
          split: (function (lr) {
              var match = Curry._1(disj.split, List.map((function (param) {
                          return param.VAL.__out_witness;
                        }), lr));
              return [
                      List.map((function (v) {
                              return {
                                      NAME: "Agency",
                                      VAL: {
                                        __out_witness: v
                                      }
                                    };
                            }), match[0]),
                      List.map((function (v) {
                              return {
                                      NAME: "Agency",
                                      VAL: {
                                        __out_witness: v
                                      }
                                    };
                            }), match[1])
                    ];
            })
        };
}

var g = Mpst$TravelAgency.choice_at(customer, to_agency(reserve_or_cancel), [
      customer,
      Mpst$TravelAgency.$neg$neg$great(customer, agency, reserve, Mpst$TravelAgency.$neg$neg$great(agency, hotel, price, Mpst$TravelAgency.$neg$neg$great(hotel, customer, billing, Mpst$TravelAgency.finish)))
    ], [
      customer,
      Mpst$TravelAgency.$neg$neg$great(customer, agency, cancel, Mpst$TravelAgency.$neg$neg$great(agency, hotel, notice, Mpst$TravelAgency.finish))
    ]);

export {
  lens_c ,
  lens_s ,
  lens_a ,
  customer ,
  agency ,
  hotel ,
  reserve ,
  cancel ,
  reserve_or_cancel ,
  price ,
  billing ,
  customer_option ,
  response ,
  notice ,
  to_agency ,
  g ,
  
}
/* g Not a pure module */
